// rest
apply plugin: 'war'
apply plugin: 'java'

sourceCompatibility = 1.8

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    compile group: 'org.glassfish.jersey.ext', name: 'jersey-spring4', version: '2.26-b08'
    runtime group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.26-b08'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.26-b08'

    compile group: 'org.springframework.data', name: 'spring-data-mongodb', version: '1.10.4.RELEASE'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.9'

    testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: '2.26-b08'
    testCompile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'

    testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.9.RELEASE'

    testCompile group: 'org.powermock', name: 'powermock-module-testng', version: '1.7.0'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '1.7.0'

}

war {
    archiveName "rest.war"
}

task deployLocal(type: Copy) {
    def catalinaEnvName = "CATALINA_HOME"

    def tomcatDir = System.getenv(catalinaEnvName)
    println catalinaEnvName + "=" + tomcatDir

    def source = war.archivePath
    def destination = file(tomcatDir + "/webapps")

    from source
    into destination
    include "*.war"

    doFirst {
        println "Copy *.war files from: " + source + " to: " + destination

        if (!tomcatDir) {
            throw new RuntimeException("Please set environment variable: " + catalinaEnvName)
        }


    }
}

idea {
    module {
        testSourceDirs += file('src/intTest/java')
    }
}
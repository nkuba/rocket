// rest
apply plugin: 'war'
apply plugin: 'java'

sourceCompatibility = 1.8

ext {
    jerseyVersion = '2.26-b08'
    powerMockVersion = '1.7.0'
    springVersion = '4.3.10.RELEASE'
    apacheCommonsVersion = '3.6'
    slf4jVersion = '1.7.25'
    logbackVersion = '1.2.3'
    springDataVersion = '1.10.5.RELEASE'
    jacksonVersion = '2.9.0.pr4'
    gsonVersion = '2.8.1'
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: apacheCommonsVersion

    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion

    compile group: 'org.glassfish.jersey.ext', name: 'jersey-spring4', version: jerseyVersion
    runtime group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: jerseyVersion
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: jerseyVersion

    compile group: 'org.springframework.data', name: 'spring-data-mongodb', version: springDataVersion

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion

    testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: jerseyVersion
    testCompile group: 'com.google.code.gson', name: 'gson', version: gsonVersion

    testCompile group: 'org.springframework', name: 'spring-test', version: springVersion

    testCompile group: 'org.powermock', name: 'powermock-module-testng', version: powerMockVersion
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: powerMockVersion
}

war {
    archiveName "rest.war"
}

task deployLocal(type: Copy) {
    def catalinaEnvName = "CATALINA_HOME"

    def tomcatDir = System.getenv(catalinaEnvName)
    println catalinaEnvName + "=" + tomcatDir

    def source = war.archivePath
    def destination = file(tomcatDir + "/webapps")

    from source
    into destination
    include "*.war"

    doFirst {
        println "Copy *.war files from: " + source + " to: " + destination

        if (!tomcatDir) {
            throw new RuntimeException("Please set environment variable: " + catalinaEnvName)
        }
    }
}

idea {
    module {
        testSourceDirs += file('src/intTest/java')
    }
}